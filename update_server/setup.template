# Just some ideas
SERVER_ADDRESS=root@<%= ip %>
nocheck=" -o StrictHostKeyChecking=no "
ssh $nocheck $SERVER_ADDRESS << 'EOSSH'
touch /.cloud-warnings.skip
which git || (
  apt-get update
  apt-get -y install git
)
git config --global user.email "info@cncf.io"
git config --global user.name "CNCF-Bot"
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
apt-get update
apt-get -y install build-essential gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget

echo '
<%= update_minute %> <%= update_hour %> * * * root bash -l -c "bash /root/update.sh"
55 23 * * * root bash -l -c "sudo reboot"
' > /etc/cron.d/updater
echo '
  set -e
  . ~/.nvm/nvm.sh
  export HOME=/root
  rm -rf /repo
  git clone https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$REPO /repo
  cd /repo
  npm install && npm install interactive-landscape@latest && cp ./node_modules/interactive-landscape/.nvmrc . && nvm install `cat .nvmrc` && nvm use && npm install -g npm && npm install && npm install interactive-landscape@latest && (export PROJECT_PATH="$PWD"; npm explore interactive-landscape -- npm run update) && npm explore interactive-landscape -- npm run check-links && git add . && git config --global user.email "info@cncf.io" && git config --global user.name "CNCF-bot" && git commit -m "Automated update by CNCF-bot" && git push origin HEAD
' > /root/real_update.sh
echo '
  set -e
  for f in *.settings; do
    (
      source "$f"
      source "$f.private"
      set +e
      (bash /root/real_update.sh || bash /root/real_update.sh || bash root/real_update.sh) > /root/update."$f".log 2>&1
      cd /repo/node_modules/interactive-landscape && ERROR_STATUS=$? LOGFILE_PATH=/root/update."$f".log ./node_modules/.bin/babel-node tools/reportToSlack.js
      set -e
    ) || echo "failed to update a project $f"
  done
  ' > /root/update.sh
echo '
  export REPO=<%= repo %>
' > "<%= name %>.settings"
ls "<%= name %>.settings.private" 2>/dev/null || (
    echo "Creating a file with private settings, /root/<%= name %>.settings.private ,
please fill it with proper keys and tokens"
    echo '
    export SLACK_CHANNEL=
    ' > "<%= name %>.settings.private"

)
EOSSH

